<rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>cluhring</title><description>Just a few thoughts and technical posts about things I'm learning.</description><link>http://localhost:2368/</link><generator>Ghost 0.5</generator><lastBuildDate>Fri, 06 Mar 2015 19:32:12 GMT</lastBuildDate><atom:link href="http://localhost:2368/rss/" rel="self" type="application/rss+xml"/><ttl>60</ttl><item><title>Securing your Mapbox Secret Tokens</title><description>&lt;p&gt;In this blog post, I will show you how to insert a dynamic map into your rails project and protect your secret tokens.&lt;/p&gt;

&lt;p&gt;1) Go to Mapbox.com - create an account &amp;amp; design a map (super easy).  Mapbox provides users with a free 30 day trial and some amazing maps and easy to use tools that you can use to build a pretty cool map very quickly. Mapbox also provides users with information to quickly get your map displaying in your projects here: &lt;a href="https://www.mapbox.com/mapbox.js/example/v1.0.0/"&gt;https://www.mapbox.com/mapbox.js/example/v1.0.0/&lt;/a&gt;. However, I think you might find the information below helpful, as you will probably want to keep your secret keys/tokens, secret.&lt;/p&gt;

&lt;p&gt;2) Next, cd into your rails application and create a main.js file in your project  &lt;/p&gt;

&lt;pre&gt;&lt;code&gt;touch main.js  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;3) Insert "require('map box.js')" into the main.js file from you command line:  &lt;/p&gt;

&lt;pre&gt;&lt;code&gt;echo "require('mapbox.js');" &amp;gt;&amp;gt; main.js  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;4) Install mapbox  &lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ npm install mapbox.js â€”save
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;5) Install browserify (a bundling tool for javascript)  &lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ npm install -g browserify
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;6) Bundle your project using browserify  &lt;/p&gt;

&lt;pre&gt;&lt;code&gt;browserify main.js -o bundle.js  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;7) To access mapbox in your rails project, open your app/views/layouts/application.html.erb file and insert the following html between your head tags.  This html allows you to accesses the mapbox api within your project. Note: You you will eventually want to move the style tags out into a stylesheet, but the code below will get you started.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;meta charset=utf-8 /&amp;gt;  
&amp;lt;title&amp;gt;My First Map with Mapbox&amp;lt;/title&amp;gt;  
&amp;lt;meta name='viewport' content='initial-scale=1,maximum-scale=1,user-scalable=no'/&amp;gt;  
&amp;lt;script src='https://api.tiles.mapbox.com/mapbox.js/v2.1.5/mapbox.js'&amp;lt;/script&amp;gt;  
&amp;lt;link href='https://api.tiles.mapbox.com/mapbox.js/v2.1.5/mapbox.css' rel='stylesheet'/&amp;gt;  
&amp;lt;style&amp;gt;  
#map { height: 400px; width: 800px; padding:5; border: none; float:center; top: 5px; bottom:0; width:100%; }
&amp;lt;/style&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;8) In the view where you'd like to see your map displayed, insert the following html.  This code accesses your mapbox account and displays your map.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;div id='map'&amp;gt;&amp;lt;/div&amp;gt;  
&amp;lt;script&amp;gt;  
L.mapbox.accessToken = 'PUBLIC KEY';  
var map = L.mapbox.map('map', 'MAP ID')  
&amp;lt;/script&amp;gt;  
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Your &lt;strong&gt;PUBLIC KEY&lt;/strong&gt; is generated by Mapbox and can be found here here: &lt;a href="https://www.mapbox.com/account/apps/"&gt;https://www.mapbox.com/account/apps/&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Your &lt;strong&gt;MAP ID&lt;/strong&gt; will be located in your project folders: &lt;a href="https://www.mapbox.com/projects/"&gt;https://www.mapbox.com/projects/&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;9) If you are using github or any other public site to host your repository, you will also want to hide your &lt;strong&gt;PUBLIC KEY&lt;/strong&gt;, so the big bad computer hackers can't jack your mapbox maps and/or other sensitive info (I don't know much about hacking yet).  In Rails 4.1, config/secrets.yml is the new default location for secret&lt;em&gt;key&lt;/em&gt;base of your application. It can also be used also for storing other secret variables, like environment-specific tokens, API keys etc.  Therefore, we are going to move your &lt;strong&gt;PUBLIC KEY&lt;/strong&gt; into your config/secrets.yml, assigning it the name "mapbox_token", like so:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;development:  
  mapbox_token: pk.1111111111aaaaaaaaaaa.22222222222bbbbbbbbbbbb
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;10) Eventually, you might want to test the JavaScript of your map and/or access your map in production.  Therefore, you might as well create a default environment, which allows your mapbox_token to be accessed from all environments, like so:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;default: &amp;amp;default  
    mapbox_token: pk.1111111111aaaaaaaaaaa.22222222222bbbbbbbbbbbb
development:  
  &amp;lt;&amp;lt;: *default
test:  
  &amp;lt;&amp;lt;: *default
production:  
  secret_key_base: &amp;lt;%= ENV["SECRET_KEY_BASE"] %&amp;gt;

# Do not keep production secrets in the repository,
# instead read values from the environment.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;11) Next, go back to the view where you placed your map.  Rails 4.1 provides you with methods to access your secrets with &lt;code&gt;Rails.application.secrets&lt;/code&gt;.  Because you placed the map in a view, you also need to wrap this code in erb tags like so &lt;code&gt;&amp;lt;%= Rails.application.secrets.mapbox_token %&amp;gt;&lt;/code&gt;. The view which displays your map should now look like this:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;      &amp;lt;div id='map'&amp;gt;&amp;lt;/div&amp;gt;
      &amp;lt;script&amp;gt;
      L.mapbox.accessToken = '&amp;lt;%= Rails.application.secrets.mapbox_token %&amp;gt;';
      var map = L.mapbox.map('map', 'MAP ID')
      &amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;12) Add "config/secrets.yml" to your .gitignore file before pushing to github to ensure your secrets are safe.&lt;/p&gt;

&lt;p&gt;13) Finally, when pushing your application up to production, specifically heroku, you will need to need to push up the secrets in your secrets.yml file.  A good tool for this is the gem Heroku Secrets: &lt;a href="https://github.com/alexpeattie/heroku_secrets"&gt;https://github.com/alexpeattie/heroku_secrets&lt;/a&gt;.  Simply add the gem to your Gemfile, like so: &lt;code&gt;gem 'heroku_secrets'&lt;/code&gt; and from your terminal run &lt;code&gt;bin/rake heroku:secrets RAILS_ENV=production&lt;/code&gt;. Yay! Your secret mapbox token is now hidden and safe.  &lt;/p&gt;

&lt;p&gt;Thanks for checking out my first technical blogpost :) &lt;br&gt;
It would not have been possible without the help of Rachel Warbelow.  Thanks so much Rachel!  &lt;/p&gt;

&lt;p&gt;Chris Luhring &lt;br&gt;
Turing Student &lt;br&gt;
1410 Cohort&lt;/p&gt;</description><link>http://localhost:2368/2015/02/14/securing-your-mapbox-secret-tokens/</link><guid isPermaLink="false">e9fbadba-ebb9-4efc-b6a2-fe7b32cb0609</guid><dc:creator>Chris Luhring</dc:creator><pubDate>Sun, 15 Feb 2015 00:47:00 GMT</pubDate></item></channel></rss>